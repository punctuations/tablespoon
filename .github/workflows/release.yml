name: goreleaser

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  popcorn-release:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Release kernel (popcorn)
        run: "go build . -o out"
      - name: Copy files to be compressed
        run: "cp .kernelrc ./out && cp README.md ./out && cp LICENSE ./out"
      - name: Archive release
        if: ${{ matrix.config.os != 'windows-latest' }}
        uses: thedoctor0/zip-release@main
        with:
          type: 'tar'
          path: './out'
        - if: ${{ matrix.config.os == 'ubuntu-latest' }}
          filename: "kernel-linux.tar.gz"
        - if: ${{ matrix.config.os == 'macos-latest' }}
          filename: "kernel-mac.tar.gz"
      - name: Archive release (Windows)
        if: ${{ matrix.config.os == 'window-latest' }}
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          path: './out'
          filename: 'kernel-windows.zip'
      - name: Upload Release Asset
        if: ${{ matrix.config.os != 'windows-latest' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
        - if: ${{ matrix.config.os == 'ubuntu-latest' }}
          asset_path: "./kernel-linux.tar.gz"
          asset_name: "kernel-linux.tar.gz"
        - if: ${{ matrix.config.os == 'macos-latest' }}
          asset_path: "./kernel-mac.tar.gz"
          asset_name: "kernel-mac.tar.gz"
        - asset_content_type: application/gzip
      - name: Upload Release Asset Windows
        if: ${{ matrix.config.os == 'windows-latest' }}
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./kernel-windows.zip
          asset_name: kernel-windows.zip
          asset_content_type: application/zip

