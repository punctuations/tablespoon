on:
  push:
    tags:
      - '*'

jobs:
  popcorn-release:
    name: popcorn-release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Set up Go"
        uses: actions/setup-go@v2
      - name: "Build Go"
        if: ${{ matrix.config.os != 'windows-latest' }}
        run: "go build -o ./out/tablespoon"
      - name: "Build Go (Windows)"
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: "go build -o ./out/tablespoon.exe"
      - name: "Copy files to be compressed"
        run: |
          cp .kernelrc ./out
          cp README.md ./out
          cp LICENSE ./out
      - name: "Archive release (Mac)"
        if: ${{ matrix.config.os == 'macos-latest' }}
        uses: thedoctor0/zip-release@main
        with:
          type: "tar"
          path: "-C ./out ."
          if: ${{ matrix.config.os == 'macos-latest' }}
          filename: "kernel-mac.tar.gz"
      - name: "Archive release (Ubuntu)"
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        uses: thedoctor0/zip-release@main
        with:
          type: "tar"
          path: "-C ./out ."
          filename: "kernel-linux.tar.gz"
      - name: "Archive release (Windows)"
        if: ${{ matrix.config.os == 'windows-latest' }}
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          path: './out/*'
          filename: 'kernel-windows.zip'
      - name: Get release
        id: release
        uses: bruceadams/get-release@v1.2.3
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Upload Release Asset"
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: "./kernel-linux.tar.gz"
          asset_name: "kernel-linux.tar.gz"
          asset_content_type: application/gzip
      - name: "Upload Release Asset (Mac)"
        if: ${{ matrix.config.os == 'macos-latest' }}
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: "./kernel-mac.tar.gz"
          asset_name: "kernel-mac.tar.gz"
          asset_content_type: application/gzip
      - name: "Upload Release Asset (Windows)"
        if: ${{ matrix.config.os == 'windows-latest' }}
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./kernel-windows.zip
          asset_name: kernel-windows.zip
          asset_content_type: application/zip

